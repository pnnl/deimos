name: Continuous Integration / Deployment
on: [pull_request, push]

jobs:
  Format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Apply formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON_PYLINT: true
          VALIDATE_PYTHON_FLAKE8: true
          VALIDATE_PYTHON_ISORT: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORE_GITIGNORED_FILES: true

  Test:
    name: ${{ matrix.os }}
    needs:
      - Format
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          environment-file: environment.yml
          use-only-tar-bz2: true
          auto-activate-base: false
          activate-environment: deimos
      
      - name: Install DEIMoS
        run: pip install --no-deps .
    
      - name: Test environment
        run: |
          which deimos
          deimos --help
          pytest
  
  Deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs:
      - Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Build conda package
        uses: prefix-dev/rattler-build-action@v0.2.24
        with:
          # Needs to be unique for each matrix entry
          recipe-path: conda.recipe/recipe.yaml
          build-args: >
            --target-platform noarch
            --output-dir build/
            -c conda-forge
            -c bioconda
      
      - name: Upload conda package
        env:
          ANACONDA_API_KEY: ${{ secrets.ANACONDA_TOKEN }}
        run: |
          for pkg in $(find build/ -type f \( -name "*.conda" -o -name "*.tar.bz2" \) ); do
            echo "Uploading ${pkg}"
            rattler-build upload anaconda --owner smcolby "${pkg}"
          done